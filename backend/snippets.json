{
  "examples": {
    "generate sass styles for hover, highlight, mouseover effects": {
      "description": "SASS styles for hover and highlight effects.",
      "code": ".button {\n  background-color: blue;\n  \u0026:hover {\n    background-color: darkblue;\n  }\n  \u0026.highlight {\n    border: 2px solid yellow;\n  }\n}"
    },
    "how to exponentially BTFO": {
      "description": "Example of an exponential backoff strategy.",
      "code": "for i := 0; i \u003c maxRetries; i++ {\n    waitTime := time.Duration(1 \u003c\u003c i) * time.Second // Exponential backoff\n    time.Sleep(waitTime)\n}"
    },
    "make a footer for a react component use tsx": {
      "description": "A simple footer component in a React app using TypeScript.",
      "code": "import React from 'react';\n\nconst Footer = () =\u003e {\n  return \u003cfooter\u003eÂ© 2024 My Company\u003c/footer\u003e;\n};\n\nexport default Footer;"
    },
    "make a index.tsx page for a react app": {
      "description": "An example of a basic index page in a React app using TypeScript.",
      "code": "import React from 'react';\n\nconst Home = () =\u003e {\n  return \u003ch1\u003eWelcome to the Home Page!\u003c/h1\u003e;\n};\n\nexport default Home;"
    },
    "make a navbar for a react component use tsx": {
      "description": "A simple navbar component in a React app using TypeScript.",
      "code": "import React from 'react';\n\nconst Navbar = () =\u003e {\n  return (\n    \u003cnav\u003e\n      \u003cul\u003e\n        \u003cli\u003e\u003ca href='/'\u003eHome\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href='/about'\u003eAbout\u003c/a\u003e\u003c/li\u003e\n        \u003cli\u003e\u003ca href='/contact'\u003eContact\u003c/a\u003e\u003c/li\u003e\n      \u003c/ul\u003e\n    \u003c/nav\u003e\n  );\n};\n\nexport default Navbar;"
    },
    "what is 3 + 3 ?": {
      "description": "what is 3 + 3 ?",
      "code": "3 + 3 = 6"
    },
    "what is the command to make a nextjs app with typescript and sass": {
      "description": "Command to create a Next.js app with TypeScript and SASS.",
      "code": "npx create-next-app@latest my-app --typescript --use-npm\ncd my-app\nnpm install sass"
    },
    "write a .gitignore for a rust app": {
      "description": "Basic .gitignore for a Rust app.",
      "code": "target/\n**/*.rs.bk\nCargo.lock\n"
    },
    "write a basic .gitignore for a go app": {
      "description": "Basic .gitignore for a Go app.",
      "code": "bin/\n*.exe\n*.out\n*.test\nvendor/"
    },
    "write a basic .gitignore for a next.js app using sass and typescript": {
      "description": "Basic .gitignore for a Next.js app with TypeScript and SASS.",
      "code": "node_modules/\n.next/\nout/\n.env.local\n.env.development.local\n.env.test.local\n.env.production.local\n*.log"
    },
    "write a do while loop in Go": {
      "description": "Example of a do-while loop in Go.",
      "code": "i := 0\nfor {\n  fmt.Println(i)\n  i++\n  if i \u003e= 5 {\n    break\n  }\n}"
    },
    "write a do while loop in rust": {
      "description": "Example of a do-while loop in Rust.",
      "code": "let mut i = 0;\nloop {\n  println!(\"{}\", i);\n  i += 1;\n  if i \u003e= 5 {\n    break;\n  }\n}"
    },
    "write a do while loop in typescript": {
      "description": "Example of a do-while loop in TypeScript.",
      "code": "let i = 0;\ndo {\n  console.log(i);\n  i++;\n} while (i \u003c 5);"
    },
    "write a for loop in Go": {
      "description": "Example of a for loop in Go.",
      "code": "for i := 0; i \u003c 5; i++ {\n  fmt.Println(i)\n}"
    },
    "write a for loop in rust": {
      "description": "Example of a for loop in Rust.",
      "code": "for i in 0..5 {\n  println!(\"{}\", i);\n}"
    },
    "write a for loop in typescript": {
      "description": "Example of a for loop in TypeScript.",
      "code": "for (let i = 0; i \u003c 5; i++) {\n  console.log(i);\n}"
    },
    "write a try catch statement in tsx": {
      "description": "Example of a try-catch statement in a TSX file.",
      "code": "try {\n  // Code that may throw an error\n} catch (error) {\n  console.error('Error occurred:', error);\n}"
    }
  }
}
